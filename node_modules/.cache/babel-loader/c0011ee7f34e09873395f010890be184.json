{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-typescript-starter\\\\src\\\\pages\\\\auth\\\\Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { useAppSelector, useAppDispatch } from '../../redux/hooks';\nimport { login, selectAuthState } from '../auth/authSlice';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\n\nconst Login = () => {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useAppDispatch();\n  const authState = useAppSelector(selectAuthState); // const { register, handleSubmit, watch, formState: { errors } } = useForm<AuthInputs>();\n  // const onSubmit = (data : any) => {\n  //     alert('asdas')\n  //     console.log(data)\n  //     // login redux action\n  // };\n\n  const onFinish = values => {\n    dispatch(login(values, history));\n    console.log('Success:', values);\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      margin: '30vh',\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(Form, { ...layout,\n      name: \"basic\",\n      initialValues: {\n        remember: true\n      },\n      onFinish: onFinish,\n      onFinishFailed: onFinishFailed,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"PSMBFI Member Portal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Username\",\n        name: \"username\",\n        rules: [{\n          required: true,\n          message: 'Please input your username!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Password\",\n        name: \"password\",\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"remember\",\n        valuePropName: \"checked\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          children: \"Remember me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        block: true,\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"cysz8D/GSViJNhQvAC+yDmv8IQI=\", false, function () {\n  return [useHistory, useAppDispatch, useAppSelector];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/react-typescript-starter/src/pages/auth/Login.tsx"],"names":["React","useHistory","useAppSelector","useAppDispatch","login","selectAuthState","Form","Input","Button","Checkbox","layout","labelCol","span","wrapperCol","tailLayout","offset","Login","history","dispatch","authState","onFinish","values","console","log","onFinishFailed","errorInfo","display","margin","flex","alignItems","justifyContent","remember","required","message"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { AuthInputs } from './types';\r\nimport { useAppSelector, useAppDispatch } from '../../redux/hooks';\r\nimport { login, selectAuthState } from '../auth/authSlice'; \r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nconst Login = () => {\r\n\r\n  const history = useHistory();\r\n  const dispatch = useAppDispatch();\r\n  const authState = useAppSelector(selectAuthState);\r\n\r\n  // const { register, handleSubmit, watch, formState: { errors } } = useForm<AuthInputs>();\r\n  // const onSubmit = (data : any) => {\r\n  //     alert('asdas')\r\n  //     console.log(data)\r\n  //     // login redux action\r\n      \r\n  // };\r\n\r\n  const onFinish = (values: any) => {\r\n    dispatch(login(values, history));\r\n    console.log('Success:', values);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo: any) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  return (\r\n    <div style={{display:'flex', margin:'30vh', flex:1, alignItems:'center', justifyContent:'center'}}>\r\n        \r\n        <Form\r\n        {...layout}\r\n        name=\"basic\"\r\n        initialValues={{ remember: true }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n      >\r\n        <h1>PSMBFI Member Portal</h1>\r\n        <Form.Item\r\n          label=\"Username\"\r\n          name=\"username\"\r\n          rules={[{ required: true, message: 'Please input your username!' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          rules={[{ required: true, message: 'Please input your password!' }]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"remember\" valuePropName=\"checked\">\r\n          <Checkbox>Remember me</Checkbox>\r\n        </Form.Item>\r\n\r\n        <Button block type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n"]},"metadata":{},"sourceType":"module"}