{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-typescript-starter\\\\src\\\\pages\\\\auth\\\\Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { useAppSelector, useAppDispatch } from '../../redux/hooks';\nimport { login, selectAuthState } from './authSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useAppDispatch();\n  const authState = useAppSelector(selectAuthState);\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(data); // login redux action\n\n    dispatch(login(data, history));\n  }; // console.log(watch(\"email\")) // watch input value by passing the name of it\n\n\n  return (\n    /*#__PURE__*/\n\n    /* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */\n    _jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ...register(\"email\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"This field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        ...register(\"password\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"This field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  );\n};\n\n_s(Login, \"kMT4fmmDD0d3WVCIeCogJB56zGI=\", false, function () {\n  return [useHistory, useAppDispatch, useAppSelector, useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/react-typescript-starter/src/pages/auth/Login.tsx"],"names":["React","useHistory","useForm","useAppSelector","useAppDispatch","login","selectAuthState","Login","history","dispatch","authState","register","handleSubmit","watch","formState","errors","onSubmit","data","console","log","required","email","password"],"mappings":";;;AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,mBAA/C;AACA,SAASC,KAAT,EAAgBC,eAAhB,QAAuC,aAAvC;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAMC,OAAO,GAAGP,UAAU,EAA1B;AACA,QAAMQ,QAAQ,GAAGL,cAAc,EAA/B;AACA,QAAMM,SAAS,GAAGP,cAAc,CAACG,eAAD,CAAhC;AAEA,QAAM;AAAEK,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAA5C,MAA2Db,OAAO,EAAxE;;AACA,QAAMc,QAAQ,GAAIC,IAAD,IAAgB;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAD6B,CAE7B;;AACAR,IAAAA,QAAQ,CAACJ,KAAK,CAACY,IAAD,EAAOT,OAAP,CAAN,CAAR;AACH,GAJD,CANgB,CAYhB;;;AAEA;AAAA;;AACE;AACA;AAAM,MAAA,QAAQ,EAAEI,YAAY,CAACI,QAAD,CAA5B;AAAA,8BAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAA,WAAuBL,QAAQ,CAAC,OAAD,EAAU;AAAES,UAAAA,QAAQ,EAAE;AAAZ,SAAV;AAA/B;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGL,MAAM,CAACM,KAAP,iBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHnB,eAME;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAA,WAA2BV,QAAQ,CAAC,UAAD,EAAa;AAAES,UAAAA,QAAQ,EAAE;AAAZ,SAAb;AAAnC;AAAA;AAAA;AAAA;AAAA,cANF,EAQGL,MAAM,CAACO,QAAP,iBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARtB,eAUE;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAeH,CA7BD;;GAAMf,K;UACcN,U,EACCG,c,EACCD,c,EAE+CD,O;;;KAL/DK,K;AA+BN,eAAeA,KAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { AuthInputs } from './types';\r\nimport { useAppSelector, useAppDispatch } from '../../redux/hooks';\r\nimport { login, selectAuthState } from './authSlice';   \r\n\r\nconst Login = () => {\r\n    const history = useHistory();\r\n    const dispatch = useAppDispatch();\r\n    const authState = useAppSelector(selectAuthState);\r\n\r\n    const { register, handleSubmit, watch, formState: { errors } } = useForm<AuthInputs>();\r\n    const onSubmit = (data : any) => {\r\n        console.log(data)\r\n        // login redux action\r\n        dispatch(login(data, history));\r\n    };\r\n\r\n    // console.log(watch(\"email\")) // watch input value by passing the name of it\r\n\r\n    return (\r\n      /* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {/* register your input into the hook by invoking the \"register\" function */}\r\n        <input type=\"text\" {...register(\"email\", { required: true })} />\r\n        {errors.email && <span>This field is required</span>}\r\n\r\n        {/* include validation with required or other standard HTML validation rules */}\r\n        <input type=\"password\" {...register(\"password\", { required: true })} />\r\n        {/* errors will return when field validation fails  */}\r\n        {errors.password && <span>This field is required</span>}\r\n        \r\n        <input type=\"submit\" />\r\n      </form>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}