{"ast":null,"code":"import axios from \"axios\";\nimport { API_METHODS } from '../common/enums'; // import { store } from \"../in dex\";\n// import { SET_ERROR } from \"../actions/types\";\n\nconst axiosRequest = axios.create({\n  baseURL: process.env.REACT_APP_API //   Authorization: `Bearer ${window.localStorage.getItem(\n  //     \"EBOOK_READER_AUTH_TOKEN\"\n  //   )}`,\n  //   timeout: 20000,\n  // headers: { \"X-Custom-Header\": \"foobar\" }\n\n}); // Add a request interceptor\n\naxiosRequest.interceptors.request.use(function (config) {\n  // Do something before request is sent\n  // console.log(window.localStorage.getItem(\"inteligente_token\"));\n  const token = window.localStorage.getItem(\"AUTH_TOKEN\");\n  config.headers = { ...config.headers,\n    Accept: \"application/json\",\n    \"Access-Key\": token\n  };\n  return config;\n}, function (error) {\n  // Do something with request error\n  return Promise.reject(error);\n}); // RESPONSE\n// Add a response interceptor\n\naxiosRequest.interceptors.response.use(function (response) {\n  // Do something with response data\n  return response.data;\n}, function (error) {\n  // Do something with response error\n  // store.dispatch({ type: SET_ERROR, payload: error.response.data });\n  return Promise.reject(error);\n});\n\nconst makeRequest = async (method, url, params, config) => {\n  switch (method) {\n    case API_METHODS.POST:\n      {\n        return await axiosRequest.post(url, params, config);\n      }\n\n    case API_METHODS.PUT:\n      {\n        return await axiosRequest.put(url, params, config);\n      }\n\n    case API_METHODS.GET:\n      {\n        return await axiosRequest.get(url, config);\n      }\n\n    default:\n      {}\n  } //   return request;\n\n};\n\nexport { makeRequest };","map":{"version":3,"sources":["/Users/roycechua/Desktop/react-typescript-starter/src/api/axiosModule.ts"],"names":["axios","API_METHODS","axiosRequest","create","baseURL","process","env","REACT_APP_API","interceptors","request","use","config","token","window","localStorage","getItem","headers","Accept","error","Promise","reject","response","data","makeRequest","method","url","params","POST","post","PUT","put","GET","get"],"mappings":"AAAA,OAAOA,KAAP,MAA0C,OAA1C;AACA,SAASC,WAAT,QAA4B,iBAA5B,C,CACA;AACA;;AAEA,MAAMC,YAAY,GAAGF,KAAK,CAACG,MAAN,CAAa;AAChCC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,aADW,CAEhC;AACA;AACA;AACA;AACA;;AANgC,CAAb,CAArB,C,CASA;;AACAL,YAAY,CAACM,YAAb,CAA0BC,OAA1B,CAAkCC,GAAlC,CACE,UAAUC,MAAV,EAAkB;AAChB;AACA;AACA,QAAMC,KAAK,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,YAA5B,CAAd;AACAJ,EAAAA,MAAM,CAACK,OAAP,GAAiB,EACf,GAAGL,MAAM,CAACK,OADK;AAEfC,IAAAA,MAAM,EAAE,kBAFO;AAGf,kBAAcL;AAHC,GAAjB;AAMA,SAAOD,MAAP;AACD,CAZH,EAaE,UAAUO,KAAV,EAAiB;AACf;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAhBH,E,CAmBA;AACA;;AACAhB,YAAY,CAACM,YAAb,CAA0Ba,QAA1B,CAAmCX,GAAnC,CACE,UAAUW,QAAV,EAAoB;AAClB;AACA,SAAOA,QAAQ,CAACC,IAAhB;AACD,CAJH,EAKE,UAAUJ,KAAV,EAAiB;AACf;AACA;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CATH;;AAaA,MAAMK,WAAW,GAAG,OAAOC,MAAP,EAA6BC,GAA7B,EAA2CC,MAA3C,EAAsEf,MAAtE,KAAsG;AACxH,UAAQa,MAAR;AACE,SAAKvB,WAAW,CAAC0B,IAAjB;AAAuB;AACrB,eAAO,MAAMzB,YAAY,CAAC0B,IAAb,CAAkBH,GAAlB,EAAuBC,MAAvB,EAA+Bf,MAA/B,CAAb;AACD;;AACD,SAAKV,WAAW,CAAC4B,GAAjB;AAAsB;AACpB,eAAO,MAAM3B,YAAY,CAAC4B,GAAb,CAAiBL,GAAjB,EAAsBC,MAAtB,EAA8Bf,MAA9B,CAAb;AACD;;AACD,SAAKV,WAAW,CAAC8B,GAAjB;AAAsB;AACpB,eAAO,MAAM7B,YAAY,CAAC8B,GAAb,CAAiBP,GAAjB,EAAsBd,MAAtB,CAAb;AACD;;AACD;AAAS,OACR;AAXH,GADwH,CAexH;;AACD,CAhBD;;AAkBA,SAASY,WAAT","sourcesContent":["import axios, { AxiosRequestConfig } from \"axios\";\nimport { API_METHODS } from '../common/enums';\n// import { store } from \"../in dex\";\n// import { SET_ERROR } from \"../actions/types\";\n\nconst axiosRequest = axios.create({\n  baseURL: process.env.REACT_APP_API,\n  //   Authorization: `Bearer ${window.localStorage.getItem(\n  //     \"EBOOK_READER_AUTH_TOKEN\"\n  //   )}`,\n  //   timeout: 20000,\n  // headers: { \"X-Custom-Header\": \"foobar\" }\n});\n\n// Add a request interceptor\naxiosRequest.interceptors.request.use(\n  function (config) {\n    // Do something before request is sent\n    // console.log(window.localStorage.getItem(\"inteligente_token\"));\n    const token = window.localStorage.getItem(\"AUTH_TOKEN\");\n    config.headers = {\n      ...config.headers,\n      Accept: \"application/json\",\n      \"Access-Key\": token,\n    };\n\n    return config;\n  },\n  function (error) {\n    // Do something with request error\n    return Promise.reject(error);\n  }\n);\n\n// RESPONSE\n// Add a response interceptor\naxiosRequest.interceptors.response.use(\n  function (response) {\n    // Do something with response data\n    return response.data;\n  },\n  function (error) {\n    // Do something with response error\n    // store.dispatch({ type: SET_ERROR, payload: error.response.data });\n    return Promise.reject(error);\n  }\n);\n\n\nconst makeRequest = async (method : API_METHODS, url : string, params : Map<string, any>, config : AxiosRequestConfig) => {\n  switch (method) {\n    case API_METHODS.POST: {\n      return await axiosRequest.post(url, params, config);\n    }\n    case API_METHODS.PUT: {\n      return await axiosRequest.put(url, params, config);\n    }\n    case API_METHODS.GET: {\n      return await axiosRequest.get(url, config);\n    }\n    default: {\n    }\n  }\n\n  //   return request;\n};\n\nexport { makeRequest };\n"]},"metadata":{},"sourceType":"module"}