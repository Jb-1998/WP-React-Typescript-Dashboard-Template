{"ast":null,"code":"var _jsxFileName = \"/Users/roycechua/Desktop/react-typescript-starter/src/pages/auth/Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const authState = useSelector(state => state.auth);\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(data); // login redux action\n    // dispatch(login(data));\n  };\n\n  console.log(watch(\"email\")); // watch input value by passing the name of it\n\n  return (\n    /*#__PURE__*/\n\n    /* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */\n    _jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ...register(\"email\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"This field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        ...register(\"password\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"This field is required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  );\n};\n\n_s(Login, \"vPo8BpVcT6eFZHcE2g4at0o46A8=\", false, function () {\n  return [useHistory, useDispatch, useSelector, useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/roycechua/Desktop/react-typescript-starter/src/pages/auth/Login.tsx"],"names":["React","useHistory","useForm","useDispatch","useSelector","Login","history","dispatch","authState","state","auth","register","handleSubmit","watch","formState","errors","onSubmit","data","console","log","required","email","password"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAMC,OAAO,GAAGL,UAAU,EAA1B;AACA,QAAMM,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,SAAS,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAA7B;AAEA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAA5C,MAA2Db,OAAO,EAAxE;;AACA,QAAMc,QAAQ,GAAIC,IAAD,IAAgB;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAD6B,CAE7B;AACA;AACH,GAJD;;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAAC,OAAD,CAAjB,EAZgB,CAYY;;AAE5B;AAAA;;AACE;AACA;AAAM,MAAA,QAAQ,EAAED,YAAY,CAACI,QAAD,CAA5B;AAAA,8BAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAA,WAAuBL,QAAQ,CAAC,OAAD,EAAU;AAAES,UAAAA,QAAQ,EAAE;AAAZ,SAAV;AAA/B;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGL,MAAM,CAACM,KAAP,iBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHnB,eAME;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAA,WAA2BV,QAAQ,CAAC,UAAD,EAAa;AAAES,UAAAA,QAAQ,EAAE;AAAZ,SAAb;AAAnC;AAAA;AAAA;AAAA;AAAA,cANF,EAQGL,MAAM,CAACO,QAAP,iBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARtB,eAUE;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAeH,CA7BD;;GAAMjB,K;UACcJ,U,EACCE,W,EACCC,W,EAE+CF,O;;;KAL/DG,K;AA+BN,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { AuthInputs } from '../../common/types';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst Login = () => {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const authState = useSelector(state => state.auth)\n\n    const { register, handleSubmit, watch, formState: { errors } } = useForm<AuthInputs>();\n    const onSubmit = (data : any) => {\n        console.log(data)\n        // login redux action\n        // dispatch(login(data));\n    };\n  \n    console.log(watch(\"email\")) // watch input value by passing the name of it\n  \n    return (\n      /* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */\n      <form onSubmit={handleSubmit(onSubmit)}>\n        {/* register your input into the hook by invoking the \"register\" function */}\n        <input type=\"text\" {...register(\"email\", { required: true })} />\n        {errors.email && <span>This field is required</span>}\n\n        {/* include validation with required or other standard HTML validation rules */}\n        <input type=\"password\" {...register(\"password\", { required: true })} />\n        {/* errors will return when field validation fails  */}\n        {errors.password && <span>This field is required</span>}\n        \n        <input type=\"submit\" />\n      </form>\n    );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}