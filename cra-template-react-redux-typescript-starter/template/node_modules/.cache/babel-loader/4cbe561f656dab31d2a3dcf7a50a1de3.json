{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { API } from '../../api';\nimport Swal from \"sweetalert2\";\nconst initialState = {\n  authenticated: false,\n  message: ''\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    setAuthSuccess: state => {\n      state.authenticated = true;\n    },\n    setAuthFail: state => {\n      state.authenticated = false;\n    },\n    resetAuth: state => initialState\n  }\n});\nexport const {\n  setAuthSuccess,\n  setAuthFail,\n  resetAuth\n} = authSlice.actions;\nexport const selectAuthState = state => state.auth;\nexport const login = data => async (dispatch, getState) => {\n  const apiResponse = await API.login(data, {});\n\n  if ((apiResponse === null || apiResponse === void 0 ? void 0 : apiResponse.status) === 200) {\n    dispatch(setAuthSuccess());\n    Swal.fire({\n      title: \"Login\",\n      text: \"Login Successful\",\n      icon: \"success\",\n      confirmButtonText: \"OK\"\n    });\n  } else {\n    dispatch(setAuthFail());\n  }\n};\nexport default authSlice.reducer;","map":{"version":3,"sources":["/Users/roycechua/Desktop/react-typescript-starter/src/pages/auth/authSlice.ts"],"names":["createSlice","API","Swal","initialState","authenticated","message","authSlice","name","reducers","setAuthSuccess","state","setAuthFail","resetAuth","actions","selectAuthState","auth","login","data","dispatch","getState","apiResponse","status","fire","title","text","icon","confirmButtonText","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAGA,SAASC,GAAT,QAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAMA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,aAAa,EAAE,KADE;AAEjBC,EAAAA,OAAO,EAAE;AAFQ,CAArB;AAKA,MAAMC,SAAS,GAAGN,WAAW,CAAC;AAC1BO,EAAAA,IAAI,EAAE,MADoB;AAE1BJ,EAAAA,YAF0B;AAG1BK,EAAAA,QAAQ,EAAE;AACNC,IAAAA,cAAc,EAAGC,KAAD,IAAW;AACvBA,MAAAA,KAAK,CAACN,aAAN,GAAsB,IAAtB;AAEH,KAJK;AAKNO,IAAAA,WAAW,EAAGD,KAAD,IAAW;AACpBA,MAAAA,KAAK,CAACN,aAAN,GAAsB,KAAtB;AACH,KAPK;AAQNQ,IAAAA,SAAS,EAAGF,KAAD,IAAWP;AARhB;AAHgB,CAAD,CAA7B;AAeA,OAAO,MAAM;AACTM,EAAAA,cADS;AAETE,EAAAA,WAFS;AAGTC,EAAAA;AAHS,IAITN,SAAS,CAACO,OAJP;AAMP,OAAO,MAAMC,eAAe,GAAIJ,KAAD,IAAsBA,KAAK,CAACK,IAApD;AAEP,OAAO,MAAMC,KAAK,GAAIC,IAAD,IAAiC,OAClDC,QADkD,EAElDC,QAFkD,KAG/C;AACH,QAAMC,WAAW,GAAG,MAAMnB,GAAG,CAACe,KAAJ,CAAUC,IAAV,EAAgB,EAAhB,CAA1B;;AACA,MAAI,CAAAG,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEC,MAAb,MAAwB,GAA5B,EAAiC;AAC7BH,IAAAA,QAAQ,CAACT,cAAc,EAAf,CAAR;AACAP,IAAAA,IAAI,CAACoB,IAAL,CAAU;AACNC,MAAAA,KAAK,EAAE,OADD;AAENC,MAAAA,IAAI,EAAE,kBAFA;AAGNC,MAAAA,IAAI,EAAE,SAHA;AAINC,MAAAA,iBAAiB,EAAE;AAJb,KAAV;AAMH,GARD,MAQO;AACHR,IAAAA,QAAQ,CAACP,WAAW,EAAZ,CAAR;AACH;AACF,CAhBI;AAkBP,eAAeL,SAAS,CAACqB,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport { RootState, AppThunk } from '../../redux/store';\nimport { AuthInputs } from '../../common/types';\nimport { API } from '../../api';\nimport Swal from \"sweetalert2\";\n\nexport interface AuthState {\n    status: 'loading' | 'success' | 'failed';\n}\n\nconst initialState = {\n    authenticated: false,\n    message: ''\n}\n\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n        setAuthSuccess: (state) => {\n            state.authenticated = true;\n\n        },\n        setAuthFail: (state) => {\n            state.authenticated = false;\n        },\n        resetAuth: (state) => initialState\n    }\n});\n\nexport const {\n    setAuthSuccess,\n    setAuthFail,\n    resetAuth\n} = authSlice.actions\n\nexport const selectAuthState = (state: RootState) => state.auth;\n\nexport const login = (data : AuthInputs): AppThunk => async (\n    dispatch,\n    getState\n  ) => {\n    const apiResponse = await API.login(data, {});\n    if (apiResponse?.status === 200) {\n        dispatch(setAuthSuccess());\n        Swal.fire({\n            title: \"Login\",\n            text: \"Login Successful\",\n            icon: \"success\",\n            confirmButtonText: \"OK\",\n        })\n    } else {\n        dispatch(setAuthFail())\n    }\n  };\n  \nexport default authSlice.reducer"]},"metadata":{},"sourceType":"module"}